import React, { useEffect, useState, useContext } from "react";
import { useParams, useNavigate } from "react-router-dom"; // Th√™m useNavigate
import { StoreContext } from "../../context/StoreContext";
import { toast } from "react-toastify";
import "./ProductDetail.css";

const API_URL = import.meta.env.VITE_API_URL;

const ProductDetail = () => {
    const { id } = useParams();
    const { addToCart } = useContext(StoreContext);
    const navigate = useNavigate(); // ƒê·ªÉ ƒëi·ªÅu h∆∞·ªõng khi mua ngay
    const [product, setProduct] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [quantity, setQuantity] = useState(1);

    useEffect(() => {
        const fetchProductDetail = async () => {
            try {
                const response = await fetch(`${API_URL}/api/product/detail/${id}`);
                const data = await response.json();
                if (response.ok && data.success) {
                    setProduct(data.data);
                } else {
                    throw new Error(data.message || "Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m");
                }
            } catch (error) {
                setError(error.message);
            } finally {
                setLoading(false);
            }
        };

        fetchProductDetail();
    }, [id]);

    const handleAddToCart = () => {
        if (product) {
            if (quantity > (product.stock || Infinity)) {
                toast.error(`S·ªë l∆∞·ª£ng y√™u c·∫ßu (${quantity}) v∆∞·ª£t qu√° t·ªìn kho (${product.stock})`);
                return;
            }
            for (let i = 0; i < quantity; i++) {
                addToCart(product._id);
            }
            toast.success(`${quantity} ${product.name} ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!`, {
                position: "top-right",
                autoClose: 3000,
                hideProgressBar: false,
                closeOnClick: true,
                pauseOnHover: true,
                draggable: true,
            });
        }
    };

    const handleBuyNow = () => {
        if (product) {
            if (quantity > (product.stock || Infinity)) {
                toast.error(`S·ªë l∆∞·ª£ng y√™u c·∫ßu (${quantity}) v∆∞·ª£t qu√° t·ªìn kho (${product.stock})`);
                return;
            }
            for (let i = 0; i < quantity; i++) {
                addToCart(product._id);
            }
            navigate("/cart"); // Chuy·ªÉn h∆∞·ªõng t·ªõi gi·ªè h√†ng ƒë·ªÉ thanh to√°n ngay
        }
    };

    if (loading) return <div className="loading">ƒêang t·∫£i chi ti·∫øt s·∫£n ph·∫©m...</div>;
    if (error) return <div className="error">L·ªói: {error}</div>;

    return (
        <div className="product-detail-container">
            <div className="product-detail">
                <div className="product-main">
                    {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
                    <div className="product-image-section">
                        <div className="main-image">
                            <img src={product.image} alt={product.name} />
                        </div>
                        <div className="thumbnails">
                            <img src={product.image} alt="Thumbnail 1" className="thumbnail-img" />
                            {/* Th√™m nhi·ªÅu ·∫£nh n·∫øu API h·ªó tr·ª£ */}
                        </div>
                    </div>

                    {/* Th√¥ng tin s·∫£n ph·∫©m */}
                    <div className="product-info-section">
                        <h1 className="product-title">{product.name}</h1>
                        <div className="product-rating">
                            <span>‚≠ê 4.5 (100 ƒë√°nh gi√°)</span> {/* Gi·∫£ l·∫≠p, thay b·∫±ng d·ªØ li·ªáu th·ª±c n·∫øu c√≥ */}
                        </div>

                        <div className="price-section">
                            {product.originalPrice && product.originalPrice > product.price ? (
                                <>
                                    <span className="original-price">
                                        <del>{product.originalPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}</del>
                                    </span>
                                    <span className="sale-price">
                                        {product.price.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}
                                    </span>
                                    <span className="discount">
                                        Gi·∫£m {Math.round(((product.originalPrice - product.price) / product.originalPrice) * 100)}%
                                    </span>
                                </>
                            ) : (
                                <span className="sale-price">
                                    {product.price.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}
                                </span>
                            )}
                        </div>

                        <div className="stock-info">T·ªìn kho: {product.stock || "ƒêang c·∫≠p nh·∫≠t"}</div>

                        <div className="quantity-section">
                            <label>S·ªë l∆∞·ª£ng:</label>
                            <div className="quantity-selector">
                                <button onClick={() => setQuantity(Math.max(1, quantity - 1))}>-</button>
                                <span>{quantity}</span>
                                <button onClick={() => setQuantity(quantity + 1)}>+</button>
                            </div>
                        </div>

                        <div className="action-buttons">
                            <button className="add-to-cart-btn" onClick={handleAddToCart}>
                                <span role="img" aria-label="cart">üõí</span> Th√™m v√†o gi·ªè
                            </button>
                            <button className="buy-now-btn" onClick={handleBuyNow}>
                                Mua ngay
                            </button>
                        </div>

                        <div className="shipping-info">
                            <p><strong>Giao h√†ng:</strong> Mi·ªÖn ph√≠ cho ƒë∆°n t·ª´ 200.000‚Ç´</p>
                            <p><strong>Th·ªùi gian giao:</strong> 2-7 ti·∫øng sau khi ƒë·∫∑t h√†ng</p>
                        </div>
                    </div>
                </div>

                {/* M√¥ t·∫£ & Th√¥ng tin chi ti·∫øt */}
                <div className="product-details-section">
                    <div className="description">
                        <h2>M√¥ t·∫£ s·∫£n ph·∫©m</h2>
                        <p>{Array.isArray(product.description) ? product.description.join(" ") : product.description}</p>
                    </div>
                    <div className="info-table">
                        <h2>Th√¥ng tin chi ti·∫øt</h2>
                        <table>
                            <tbody>
                                <tr>
                                    <td>Xu·∫•t x·ª©</td>
                                    <td>{product.origin || "ƒêang c·∫≠p nh·∫≠t"}</td>
                                </tr>
                                <tr>
                                    <td>Th√†nh ph·∫ßn</td>
                                    <td>{product.ingredients || "Ghi tr√™n bao b√¨ s·∫£n ph·∫©m"}</td>
                                </tr>
                                <tr>
                                    <td>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</td>
                                    <td>{product.usageInstructions || "ƒê·ªçc h∆∞·ªõng d·∫´n tr√™n bao b√¨"}</td>
                                </tr>
                                <tr>
                                    <td>B·∫£o qu·∫£n</td>
                                    <td>{product.storageInstructions || "Tr√°nh nhi·ªát ƒë·ªô cao v√† √°nh n·∫Øng tr·ª±c ti·∫øp"}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                {/* S·∫£n ph·∫©m li√™n quan */}
                <div className="related-products-section">
                    <h2>S·∫£n ph·∫©m li√™n quan</h2>
                    <div className="related-products">
                        {/* Th√™m logic ƒë·ªÉ render danh s√°ch s·∫£n ph·∫©m li√™n quan */}
                        {/* <p>Ch∆∞a c√≥ s·∫£n ph·∫©m li√™n quan (C·∫ßn API ƒë·ªÉ hi·ªÉn th·ªã).</p> */}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ProductDetail;