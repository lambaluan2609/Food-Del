import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import './ProductDetail.css';

const API_URL = import.meta.env.VITE_API_URL;

const ProductDetail = () => {
    const { id } = useParams();
    const [product, setProduct] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [quantity, setQuantity] = useState(1);

    useEffect(() => {
        const fetchProductDetail = async () => {
            try {
                const response = await fetch(`${API_URL}/api/product/detail/${id}`);
                const data = await response.json();
                if (response.ok && data.success) {
                    setProduct(data.data);
                } else {
                    throw new Error(data.message || "Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m");
                }
            } catch (error) {
                setError(error.message);
            } finally {
                setLoading(false);
            }
        };

        fetchProductDetail();
    }, [id]);

    if (loading) return <p>ƒêang t·∫£i chi ti·∫øt s·∫£n ph·∫©m...</p>;
    if (error) return <p>L·ªói: {error}</p>;

    return (
        <div className="product-detail">
            <div className="product-main">
                {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
                <div className="product-image">
                    <img src={product.image} alt={product.name} />
                    <div className="thumbnail">
                        <img src={product.image} alt="Thumbnail" />
                    </div>
                </div>

                {/* Th√¥ng tin s·∫£n ph·∫©m */}
                <div className="product-info">
                    <h1>{product.name}</h1>
                    <p className="sku">SKU: {product._id}</p>
                    {/* <p className="original-price">Gi√° ni√™m y·∫øt: <del>{(product.price * 1.2).toFixed(2)} ‚Ç´</del></p> */}
                    {/* Hi·ªÉn th·ªã gi√° ni√™m y·∫øt v√† gi√° khuy·∫øn m√£i */}
                    {product.originalPrice && product.originalPrice > product.price ? (
                        <>
                            <p className="original-price">
                                Gi√° ni√™m y·∫øt: <del>{product.originalPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}</del>
                            </p>
                            <p className="sale-price">
                                Gi√° khuy·∫øn m√£i: <span>{product.price.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}</span>
                            </p>
                        </>
                    ) : (
                        <p className="sale-price">
                            Gi√°: <span>{product.price.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}</span>
                        </p>
                    )}

                    <div className="quantity-selector">
                        <label>S·ªë l∆∞·ª£ng:</label>
                        <button onClick={() => setQuantity(Math.max(1, quantity - 1))}>-</button>
                        <span>{quantity}</span>
                        <button onClick={() => setQuantity(quantity + 1)}>+</button>
                    </div>

                    <button className="add-to-cart">üõí TH√äM V√ÄO GI·ªé</button>
                </div>
            </div>

            {/* M√¥ t·∫£ & Th√¥ng tin chi ti·∫øt */}
            <div className="product-details">
                <div className="description">
                    <h2>M√¥ t·∫£</h2>
                    <p>{Array.isArray(product.description) ? product.description.join(" ") : product.description}</p>
                </div>
                <div className="info-table">
                    <h2>Th√¥ng tin</h2>
                    <table>
                        <tbody>
                            <tr>
                                <td>Xu·∫•t x·ª©</td>
                                <td>{product.origin || "ƒêang c·∫≠p nh·∫≠t"}</td>
                            </tr>
                            <tr>
                                <td>Th√†nh ph·∫ßn</td>
                                <td>{product.ingredients || "Ghi tr√™n bao b√¨ s·∫£n ph·∫©m"}</td>
                            </tr>
                            <tr>
                                <td>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</td>
                                <td>{product.usageInstructions || "ƒê·ªçc h∆∞·ªõng d·∫´n tr√™n bao b√¨"}</td>
                            </tr>
                            <tr>
                                <td>B·∫£o qu·∫£n</td>
                                <td>{product.storageInstructions || "Tr√°nh nhi·ªát ƒë·ªô cao v√† √°nh n·∫Øng tr·ª±c ti·∫øp"}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            {/* S·∫£n ph·∫©m li√™n quan */}
            <div className="related-products">
                <h2>S·∫£n ph·∫©m li√™n quan</h2>
                <div className="product-list">
                    {/* Danh s√°ch s·∫£n ph·∫©m li√™n quan s·∫Ω render ·ªü ƒë√¢y */}
                </div>
            </div>
        </div>
    );
};

export default ProductDetail;
